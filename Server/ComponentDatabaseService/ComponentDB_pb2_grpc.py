# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ComponentDB_pb2 as ComponentDB__pb2


class ComponentDatabaseServiceStub(object):
    """///
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegistComponent = channel.unary_unary(
                '/component_db.v1.ComponentDatabaseService/RegistComponent',
                request_serializer=ComponentDB__pb2.ComponentRegistRequest.SerializeToString,
                response_deserializer=ComponentDB__pb2.StatusResponse.FromString,
                )
        self.SearchComponent = channel.unary_unary(
                '/component_db.v1.ComponentDatabaseService/SearchComponent',
                request_serializer=ComponentDB__pb2.ComponentSearchRequest.SerializeToString,
                response_deserializer=ComponentDB__pb2.ComponentSearchResponse.FromString,
                )
        self.UpdateComponent = channel.unary_unary(
                '/component_db.v1.ComponentDatabaseService/UpdateComponent',
                request_serializer=ComponentDB__pb2.ComponentUpdateRequest.SerializeToString,
                response_deserializer=ComponentDB__pb2.StatusResponse.FromString,
                )
        self.DeleteComponent = channel.unary_unary(
                '/component_db.v1.ComponentDatabaseService/DeleteComponent',
                request_serializer=ComponentDB__pb2.ComponentDeleteRequest.SerializeToString,
                response_deserializer=ComponentDB__pb2.StatusResponse.FromString,
                )


class ComponentDatabaseServiceServicer(object):
    """///
    """

    def RegistComponent(self, request, context):
        """コンポーネントを登録する
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchComponent(self, request, context):
        """コンポーネント情報を検索する
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateComponent(self, request, context):
        """コンポーネント情報を更新する
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteComponent(self, request, context):
        """コンポーネント情報を削除する
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ComponentDatabaseServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegistComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.RegistComponent,
                    request_deserializer=ComponentDB__pb2.ComponentRegistRequest.FromString,
                    response_serializer=ComponentDB__pb2.StatusResponse.SerializeToString,
            ),
            'SearchComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchComponent,
                    request_deserializer=ComponentDB__pb2.ComponentSearchRequest.FromString,
                    response_serializer=ComponentDB__pb2.ComponentSearchResponse.SerializeToString,
            ),
            'UpdateComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateComponent,
                    request_deserializer=ComponentDB__pb2.ComponentUpdateRequest.FromString,
                    response_serializer=ComponentDB__pb2.StatusResponse.SerializeToString,
            ),
            'DeleteComponent': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteComponent,
                    request_deserializer=ComponentDB__pb2.ComponentDeleteRequest.FromString,
                    response_serializer=ComponentDB__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'component_db.v1.ComponentDatabaseService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ComponentDatabaseService(object):
    """///
    """

    @staticmethod
    def RegistComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component_db.v1.ComponentDatabaseService/RegistComponent',
            ComponentDB__pb2.ComponentRegistRequest.SerializeToString,
            ComponentDB__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component_db.v1.ComponentDatabaseService/SearchComponent',
            ComponentDB__pb2.ComponentSearchRequest.SerializeToString,
            ComponentDB__pb2.ComponentSearchResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component_db.v1.ComponentDatabaseService/UpdateComponent',
            ComponentDB__pb2.ComponentUpdateRequest.SerializeToString,
            ComponentDB__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteComponent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component_db.v1.ComponentDatabaseService/DeleteComponent',
            ComponentDB__pb2.ComponentDeleteRequest.SerializeToString,
            ComponentDB__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
